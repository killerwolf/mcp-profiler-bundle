services:
    # Default configuration for services in this bundle
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        
    # Create an alias for the Profiler class to the existing profiler service
    Symfony\Component\HttpKernel\Profiler\Profiler: '@profiler'
    
    # Register the data collector
    Killerwolf\MCPProfilerBundle\DataCollector\MCPDataCollector:
        arguments:
            - '%mcp_profiler.name%'
            - '%mcp_profiler.version%'
        tags:
            - { name: 'data_collector', template: '@MCPProfiler/data_collector/mcp.html.twig', id: 'mcp', priority: 200 }

    # Command for running the MCP server
    Killerwolf\MCPProfilerBundle\Command\RunMCPServerCommand:
        arguments:
            - '%kernel.cache_dir%' # Inject cache directory path
            - '%kernel.environment%' # Inject environment name
            - '@parameter_bag' # Inject parameter bag service
        tags:
            - { name: 'console.command' }
        public: true # Keep public as it's used directly

    # Command for testing profiler access (Seems unrelated to MCP server itself)
    Killerwolf\MCPProfilerBundle\Command\ProfilerCommand:
        arguments:
            - '%kernel.cache_dir%' # Automatically inject the cache directory
        tags:
            - { name: 'console.command' }
            
    # --- Tool Service Definitions ---

    Killerwolf\MCPProfilerBundle\Tools\ProfilerList:
        arguments:
            - '@?profiler'
            - '@parameter_bag' # Kept, as constructor still accepts it
        tags:
            - { name: 'mcp.tool' }

    Killerwolf\MCPProfilerBundle\Tools\ProfilerGetAllCollectorByToken:
        arguments:
            - '@?profiler'
        tags:
            - { name: 'mcp.tool' }

    Killerwolf\MCPProfilerBundle\Tools\ProfilerGetOneCollectorByToken:
        arguments:
            - '@?profiler'
        tags:
            - { name: 'mcp.tool' }

    Killerwolf\MCPProfilerBundle\Tools\ProfilerGetByTokenTool:
        arguments:
            - '@?profiler'
            - '@parameter_bag' # Kept, as constructor still accepts it
        tags:
            - { name: 'mcp.tool' }


